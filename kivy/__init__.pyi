"""
This type stub file was generated by pyright.
"""

import sys
import shutil
import os
import pkgutil
import re
import importlib
import kivy_deps
from getopt import GetoptError, getopt
from os import environ, mkdir
from os.path import basename, dirname, exists, expanduser, join
from kivy.logger import LOG_LEVELS, Logger, file_log_handler
from kivy.utils import platform
from kivy._version import RELEASE as _KIVY_RELEASE, __version__, _kivy_build_date, _kivy_git_hash
from kivy import deps as old_deps
from kivy.config import Config
from kivy.modules import Modules

"""
This type stub file was generated by pyright.
"""
__all__ = ('require', 'parse_kivy_version', 'kivy_configure', 'kivy_register_post_configuration', 'kivy_options', 'kivy_base_dir', 'kivy_modules_dir', 'kivy_data_dir', 'kivy_shader_dir', 'kivy_icons_dir', 'kivy_home_dir', 'kivy_config_fn', 'kivy_usermodules_dir', 'kivy_examples_dir')
__kivy_post_configuration = ...
if platform == 'macosx' and sys.maxsize < 9223372036854775807:
    r = ...
if sys.version_info[0] == 2:
    ...
def parse_kivy_version(version):
    """Parses the kivy version as described in :func:`require` into a 3-tuple
    of ([x, y, z], 'rc|a|b|dev|post', 'N') where N is the tag revision. The
    last two elements may be None.
    """
    ...

def require(version):
    '''Require can be used to check the minimum version required to run a Kivy
    application. For example, you can start your application code like this::

        import kivy
        kivy.require('1.0.1')

    If a user attempts to run your application with a version of Kivy that is
    older than the specified version, an Exception is raised.

    The Kivy version string is built like this::

        X.Y.Z[tag[tagrevision]]

        X is the major version
        Y is the minor version
        Z is the bugfixes revision

    The tag is optional, but may be one of '.dev', '.post', 'a', 'b', or 'rc'.
    The tagrevision is the revision number of the tag.

    .. warning::

        You must not ask for a version with a tag, except -dev. Asking for a
        'dev' version will just warn the user if the current Kivy
        version is not a -dev, but it will never raise an exception.
        You must not ask for a version with a tagrevision.

    '''
    ...

def kivy_configure():
    '''Call post-configuration of Kivy.
    This function must be called if you create the window yourself.
    '''
    ...

def get_includes():
    '''Retrieves the directories containing includes needed to build new Cython
    modules with Kivy as a dependency. Currently returns the location of the
    kivy.graphics module.

    .. versionadded:: 1.9.1
    '''
    ...

def kivy_register_post_configuration(callback):
    '''Register a function to be called when kivy_configure() is called.

    .. warning::
        Internal use only.
    '''
    ...

def kivy_usage():
    '''Kivy Usage: %s [KIVY OPTION...] [-- PROGRAM OPTIONS]::

            Options placed after a '-- ' separator, will not be touched by kivy,
            and instead passed to your program.

            Set KIVY_NO_ARGS=1 in your environment or before you import Kivy to
            disable Kivy's argument parser.

        -h, --help
            Prints this help message.
        -d, --debug
            Shows debug log.
        -a, --auto-fullscreen
            Force 'auto' fullscreen mode (no resolution change).
            Uses your display's resolution. This is most likely what you want.
        -c, --config section:key[:value]
            Set a custom [section] key=value in the configuration object.
        -f, --fullscreen
            Force running in fullscreen mode.
        -k, --fake-fullscreen
            Force 'fake' fullscreen mode (no window border/decoration).
            Uses the resolution specified by width and height in your config.
        -w, --windowed
            Force running in a window.
        -p, --provider id:provider[,options]
            Add an input provider (eg: ccvtable1:tuio,192.168.0.1:3333).
        -m mod, --module=mod
            Activate a module (use "list" to get a list of available modules).
        -r, --rotation
            Rotate the window's contents (0, 90, 180, 270).
        -s, --save
            Save current Kivy configuration.
        --size=640x480
            Size of window geometry.
        --dpi=96
            Manually overload the Window DPI (for testing only.)
    '''
    ...

kivy_options = ...
kivy_base_dir = ...
kivy_modules_dir = ...
kivy_data_dir = ...
kivy_binary_deps_dir = ...
kivy_shader_dir = ...
kivy_icons_dir = ...
kivy_home_dir = ...
kivy_config_fn = ...
kivy_usermodules_dir = ...
kivy_examples_dir = ...
_packages = ...
_logging_msgs = ...
if any(name in sys.argv[0] for name in ('sphinx-build', 'autobuild.py', 'sphinx')):
    ...
if 'sphinx-build' in sys.argv[0]:
    ...
if any('pytest' in arg for arg in sys.argv):
    ...
if any('pyinstaller' in arg.lower() for arg in sys.argv):
    ...
if not environ.get('KIVY_DOC_INCLUDE'):
    kivy_config_fn = ...
    kivy_usermodules_dir = ...
    icon_dir = ...
    level = ...
    need_save = ...
if not _KIVY_RELEASE and _kivy_git_hash and _kivy_build_date:
    ...
else:
    ...
if file_log_handler is not None:
    ...
