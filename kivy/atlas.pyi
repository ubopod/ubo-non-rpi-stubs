"""
This type stub file was generated by pyright.
"""

from kivy.event import EventDispatcher

"""
This type stub file was generated by pyright.
"""
__all__ = ('Atlas', )
CoreImage = ...
class Atlas(EventDispatcher):
    '''Manage texture atlas. See module documentation for more information.
    '''
    original_textures = ...
    textures = ...
    filename = ...
    def __init__(self, filename) -> None:
        ...
    
    def __getitem__(self, key):
        ...
    
    @staticmethod
    def create(outname, filenames, size, padding=..., use_path=...):
        '''This method can be used to create an atlas manually from a set of
        images.

        :Parameters:
            `outname`: str
                Basename to use for ``.atlas`` creation and ``-<idx>.png``
                associated images.
            `filenames`: list
                List of filenames to put in the atlas.
            `size`: int or list (width, height)
                Size of the atlas image. If the size is not large enough to
                fit all of the source images, more atlas images will created
                as required.
            `padding`: int, defaults to 2
                Padding to put around each image.

                Be careful. If you're using a padding < 2, you might have
                issues with the borders of the images. Because of the OpenGL
                linearization, it might use the pixels of the adjacent image.

                If you're using a padding >= 2, we'll automatically generate a
                "border" of 1px around your image. If you look at
                the result, don't be scared if the image inside is not
                exactly the same as yours :).

            `use_path`: bool, defaults to False
                If True, the relative path of the source png
                file names will be included in the atlas ids rather
                that just in the file names. Leading dots and slashes will be
                excluded and all other slashes in the path will be replaced
                with underscores. For example, if `use_path` is False
                (the default) and the file name is
                ``../data/tiles/green_grass.png``, the id will be
                ``green_grass``. If `use_path` is True, it will be
                ``data_tiles_green_grass``.

            .. versionchanged:: 1.8.0
                Parameter use_path added
        '''
        ...
    


if __name__ == '__main__':
    argv = ...
    options = ...
    outname = ...
    filenames = ...
    ret = ...
