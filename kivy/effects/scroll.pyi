"""
This type stub file was generated by pyright.
"""

from kivy.effects.kinetic import KineticEffect

'''
Scroll effect
=============

.. versionadded:: 1.7.0

Based on the :class:`~kivy.effects.kinetic` effect, the :class:`ScrollEffect`
will limit the movement to bounds determined by its :attr:`~ScrollEffect.min`
and :attr:`~ScrollEffect.max` properties. If the movement exceeds these
bounds, it will calculate the amount of :attr:`~ScrollEffect.overscroll` and
try to return to the value of one of the bounds.

This is very useful for implementing a scrolling list. We actually use this
class as a base effect for our :class:`~kivy.uix.scrollview.ScrollView` widget.

'''
__all__ = ('ScrollEffect', )
class ScrollEffect(KineticEffect):
    '''ScrollEffect class. See the module documentation for more information.
    '''
    drag_threshold = ...
    min = ...
    max = ...
    scroll = ...
    overscroll = ...
    target_widget = ...
    displacement = ...
    def reset(self, pos): # -> None:
        '''(internal) Reset the value and the velocity to the `pos`.
        Mostly used when the bounds are checked.
        '''
        ...
    
    def on_value(self, *args): # -> None:
        ...
    
    def start(self, val, t=...): # -> None:
        ...
    
    def update(self, val, t=...): # -> None:
        ...
    
    def stop(self, val, t=...): # -> None:
        ...
    


