"""
This type stub file was generated by pyright.
"""

import os
from ctypes import Structure

'''
Python mtdev
============

The mtdev module provides Python bindings to the `Kernel multi-touch
transformation library <https://launchpad.net/mtdev>`_, also known as mtdev
(MIT license).

The mtdev library transforms all variants of kernel MT events to the
slotted type B protocol. The events put into mtdev may be from any MT
device, specifically type A without contact tracking, type A with
contact tracking, or type B with contact tracking. See the kernel
documentation for further details.

.. warning::

    This is an external library and Kivy does not provide any support for it.
    It might change in the future and we advise you don't rely on it in your
    code.
'''
if 'KIVY_DOC' not in os.environ:
    libmtdev = ...
MTDEV_CODE_SLOT = ...
MTDEV_CODE_TOUCH_MAJOR = ...
MTDEV_CODE_TOUCH_MINOR = ...
MTDEV_CODE_WIDTH_MAJOR = ...
MTDEV_CODE_WIDTH_MINOR = ...
MTDEV_CODE_ORIENTATION = ...
MTDEV_CODE_POSITION_X = ...
MTDEV_CODE_POSITION_Y = ...
MTDEV_CODE_TOOL_TYPE = ...
MTDEV_CODE_BLOB_ID = ...
MTDEV_CODE_TRACKING_ID = ...
MTDEV_CODE_PRESSURE = ...
MTDEV_CODE_ABS_X = ...
MTDEV_CODE_ABS_Y = ...
MTDEV_CODE_ABS_Z = ...
MTDEV_CODE_BTN_DIGI = ...
MTDEV_CODE_BTN_TOOL_PEN = ...
MTDEV_CODE_BTN_TOOL_RUBBER = ...
MTDEV_CODE_BTN_TOOL_BRUSH = ...
MTDEV_CODE_BTN_TOOL_PENCIL = ...
MTDEV_CODE_BTN_TOOL_AIRBRUSH = ...
MTDEV_CODE_BTN_TOOL_FINGER = ...
MTDEV_CODE_BTN_TOOL_MOUSE = ...
MTDEV_CODE_BTN_TOOL_LENS = ...
MTDEV_CODE_BTN_TOUCH = ...
MTDEV_CODE_BTN_STYLUS = ...
MTDEV_CODE_BTN_STYLUS2 = ...
MTDEV_CODE_BTN_TOOL_DOUBLETAP = ...
MTDEV_CODE_BTN_TOOL_TRIPLETAP = ...
MTDEV_CODE_BTN_TOOL_QUADTAP = ...
MTDEV_TYPE_EV_ABS = ...
MTDEV_TYPE_EV_SYN = ...
MTDEV_TYPE_EV_KEY = ...
MTDEV_TYPE_EV_REL = ...
MTDEV_TYPE_EV_ABS = ...
MTDEV_TYPE_EV_MSC = ...
MTDEV_TYPE_EV_SW = ...
MTDEV_TYPE_EV_LED = ...
MTDEV_TYPE_EV_SND = ...
MTDEV_TYPE_EV_REP = ...
MTDEV_TYPE_EV_FF = ...
MTDEV_TYPE_EV_PWR = ...
MTDEV_TYPE_EV_FF_STATUS = ...
MTDEV_ABS_TRACKING_ID = ...
MTDEV_ABS_POSITION_X = ...
MTDEV_ABS_POSITION_Y = ...
MTDEV_ABS_TOUCH_MAJOR = ...
MTDEV_ABS_TOUCH_MINOR = ...
MTDEV_ABS_WIDTH_MAJOR = ...
MTDEV_ABS_WIDTH_MINOR = ...
MTDEV_ABS_ORIENTATION = ...
MTDEV_ABS_SIZE = ...
class timeval(Structure):
    _fields_ = ...


class input_event(Structure):
    _fields_ = ...


class input_absinfo(Structure):
    _fields_ = ...


class mtdev_caps(Structure):
    _fields_ = ...


class mtdev(Structure):
    _fields_ = ...


if 'KIVY_DOC' not in os.environ:
    mtdev_open = ...
    mtdev_get = ...
    mtdev_idle = ...
    mtdev_close = ...
class Device:
    def __init__(self, filename) -> None:
        ...
    
    def close(self): # -> None:
        '''Close the mtdev converter
        '''
        ...
    
    def idle(self, ms): # -> bool:
        '''Check state of kernel device

        :Parameters:
            `ms`: int
                Number of milliseconds to wait for activity

        :Return:
            Return True if the device is idle, i.e, there are no fetched events
            in the pipe and there is nothing to fetch from the device.
        '''
        ...
    
    def get(self): # -> input_event | None:
        ...
    
    def has_mtdata(self): # -> bool:
        '''Return True if the device has multitouch data.
        '''
        ...
    
    def has_slot(self): # -> bool:
        '''Return True if the device has slot information.
        '''
        ...
    
    def has_abs(self, index): # -> bool:
        '''Return True if the device has abs data.

        :Parameters:
            `index`: int
                One of const starting with a name ABS_MT_
        '''
        ...
    
    def get_max_abs(self): # -> Literal[11]:
        '''Return the maximum number of abs information available.
        '''
        ...
    
    def get_slot(self): # -> Any | None:
        '''Return the slot data.
        '''
        ...
    
    def get_abs(self, index): # -> Any:
        '''Return the abs data.

        :Parameters:
            `index`: int
                One of const starting with a name ABS_MT_
        '''
        ...
    


