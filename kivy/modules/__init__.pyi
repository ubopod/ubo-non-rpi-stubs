"""
This type stub file was generated by pyright.
"""

import kivy
import importlib
import os
import sys
from kivy.config import Config
from kivy.logger import Logger

"""
This type stub file was generated by pyright.
"""
__all__ = ('Modules', )
class ModuleContext:
    '''Context of a module

    You can access to the config with self.config.
    '''
    def __init__(self) -> None:
        ...
    
    def __repr__(self):
        ...
    


class ModuleBase:
    '''Handle Kivy modules. It will automatically load and instantiate the
    module for the general window.'''
    def __init__(self, **kwargs) -> None:
        ...
    
    def add_path(self, path):
        '''Add a path to search for modules in'''
        ...
    
    def list(self):
        '''Return the list of available modules'''
        ...
    
    def import_module(self, name):
        ...
    
    def activate_module(self, name, win):
        '''Activate a module on a window'''
        ...
    
    def deactivate_module(self, name, win):
        '''Deactivate a module from a window'''
        ...
    
    def register_window(self, win):
        '''Add the window to the window list'''
        ...
    
    def unregister_window(self, win):
        '''Remove the window from the window list'''
        ...
    
    def update(self):
        '''Update the status of the module for each window'''
        ...
    
    def configure(self):
        '''(internal) Configure all the modules before using them.
        '''
        ...
    
    def usage_list(self):
        ...
    


Modules = ...
if 'KIVY_DOC' not in os.environ:
    ...
if __name__ == '__main__':
    ...
