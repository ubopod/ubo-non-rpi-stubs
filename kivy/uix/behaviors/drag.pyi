"""
This type stub file was generated by pyright.
"""

from kivy.config import Config

"""
Drag Behavior
=============

The :class:`~kivy.uix.behaviors.drag.DragBehavior`
`mixin <https://en.wikipedia.org/wiki/Mixin>`_ class provides Drag behavior.
When combined with a widget, dragging in the rectangle defined by the
:attr:`~kivy.uix.behaviors.drag.DragBehavior.drag_rectangle` will drag the
widget.

Example
-------

The following example creates a draggable label::

    from kivy.uix.label import Label
    from kivy.app import App
    from kivy.uix.behaviors import DragBehavior
    from kivy.lang import Builder

    # You could also put the following in your kv file...
    kv = '''
    <DragLabel>:
        # Define the properties for the DragLabel
        drag_rectangle: self.x, self.y, self.width, self.height
        drag_timeout: 10000000
        drag_distance: 0

    FloatLayout:
        # Define the root widget
        DragLabel:
            size_hint: 0.25, 0.2
            text: 'Drag me'
    '''


    class DragLabel(DragBehavior, Label):
        pass


    class TestApp(App):
        def build(self):
            return Builder.load_string(kv)

    TestApp().run()

"""
__all__ = ('DragBehavior', )
_scroll_distance = ...
if Config:
    _scroll_timeout = ...
    _scroll_distance = ...
class DragBehavior:
    '''
    The DragBehavior `mixin <https://en.wikipedia.org/wiki/Mixin>`_ provides
    Drag behavior. When combined with a widget, dragging in the rectangle
    defined by :attr:`drag_rectangle` will drag the widget. Please see
    the :mod:`drag behaviors module <kivy.uix.behaviors.drag>` documentation
    for more information.

    .. versionadded:: 1.8.0
    '''
    drag_distance = ...
    drag_timeout = ...
    drag_rect_x = ...
    drag_rect_y = ...
    drag_rect_width = ...
    drag_rect_height = ...
    drag_rectangle = ...
    def __init__(self, **kwargs) -> None:
        ...
    
    def on_touch_down(self, touch): # -> Literal[True]:
        ...
    
    def on_touch_move(self, touch): # -> bool:
        ...
    
    def on_touch_up(self, touch): # -> bool:
        ...
    


