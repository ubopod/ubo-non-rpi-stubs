"""
This type stub file was generated by pyright.
"""

from picamera2.encoders.encoder import Encoder

"""This is a base class for a multi-threaded software encoder."""
class MultiEncoder(Encoder):
    """This is a base class for a multi-threaded software encoder.

    Derive your encoder from this class and add an encode_func method. For an example, see JpegEncoder
    (jpeg_encoder.py). The parallelism is likely to help when the encoder in question
    releases the GIL, for example before diving into a large C/C++ library.
    Parameters:
    num_threads - the number of parallel threads to use. Probably match this to the number of cores available for
    best performance.
    """
    def __init__(self, num_threads=...) -> None:
        """Initialise mult-threaded encoder

        :param num_threads: Number of threads to use, defaults to 4
        :type num_threads: int, optional
        """
        ...
    
    def output_thread(self): # -> None:
        """Outputs frame"""
        ...
    
    def do_encode(self, request, stream): # -> tuple[Literal[b""], int]:
        """Encodes frame in a thread

        :param request: Request
        :return: Buffer
        """
        ...
    
    def encode_func(self, request, name): # -> Literal[b""]:
        """Empty function, which will be overriden"""
        ...
    


