"""
This type stub file was generated by pyright.
"""

class Job:
    """
    A Job is an operation that can be delegated to the camera event loop to perform

    Such as capturing and returning an image. Most jobs only do a single
    thing, like copying out a numpy array, and so consist of a single function
    that we pass to do this.

    But some jobs may take several frames to complete, for example if they involve
    mode switches, or waiting for certain controls to take effect. Here we need
    to submit a list of functions to perform, and as each function, representing
    a stage of the job, completes, then we will move on to the next function in
    the list when the next frame arrives.

    Jobs are normally created by the Picamera2.dispatch_functions method, though
    most common operations have dedicated methods to do this, such as
    Picamera2.switch_mode_and_capture_array.
    """
    def __init__(self, functions, signal_function=...) -> None:
        ...
    
    def execute(self): # -> bool:
        """Try to execute this Job.

        It will return True if it finishes, or False if it needs to be tried again.
        """
        ...
    
    def signal(self): # -> None:
        """Signal that the job is finished."""
        ...
    
    def get_result(self, timeout=...):
        """This fetches the 'final result' of the job

        (being given by the return value of the last function executed). It will block
        if necessary for the job to complete.
        """
        ...
    


