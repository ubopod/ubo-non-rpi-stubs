"""
This type stub file was generated by pyright.
"""

from .output import Output

class FfmpegOutput(Output):
    """
    The FfmpegOutput class allows an encoded video stream to be passed to FFmpeg for output.

    This means we can take advantange of FFmpeg's wide support for different output formats.
    Optionally audio recording may be included, where this is handled entirely by FFmpeg.

    Because we are prepared to accept whatever parameters and values that FFmpeg supports,
    there is generally no checking up at this level. That may change over time as we
    develop better expectations as to what can and cannot work.

    For example, to record an mp4 file use FfmpegOutput("test.mp4")
    To include audio in the recording, use FfmpegOutput("test.mp4", audio=True)
    To record an MPEG2 transport stream, use FfmpegOutput("test.ts")
    In fact, the output filename may include any string of options and an output
    destination so long as these are meaningful to FFmpeg. So you might even try something
    like FfmpegOutput("-f mpegts udp://<ip-addr>:<port>").

    When audio recording is enabled, the following optional parameters are available:
    audio_device - the name of the Pulse audio device ("default" is usually OK)
    audio_sync - time offset (in seconds) to add to the audio stream to ensure synchronisation
    with the video. So making this more negative will make the audio earlier. In general this
    may need tweaking depending on the hardware and configuration being used.
    audio_samplerate, audio_codec, audio_bitrate - the usual audio parameters.
    """
    def __init__(self, output_filename, audio=..., audio_device=..., audio_sync=..., audio_samplerate=..., audio_codec=..., audio_bitrate=..., pts=...) -> None:
        ...
    
    def start(self): # -> None:
        ...
    
    def stop(self): # -> None:
        ...
    
    def outputframe(self, frame, keyframe=..., timestamp=...): # -> None:
        ...
    


